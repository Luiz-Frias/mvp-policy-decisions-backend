[databases]
; Connection string to actual PostgreSQL
; PgBouncer will multiplex client connections to the real database
policy_core = host=host.docker.internal port=5432 dbname=policy_core

; Optional: separate pools for read replicas
; policy_core_read = host=read-replica.example.com port=5432 dbname=policy_core

[pgbouncer]
; Where to listen for client connections
listen_addr = *
listen_port = 6432

; Authentication settings
auth_type = trust
auth_file = /etc/pgbouncer/userlist.txt

; Pool configuration
pool_mode = transaction
max_client_conn = 1000
default_pool_size = 25
min_pool_size = 5
reserve_pool_size = 5
reserve_pool_timeout = 5

; Performance tuning
server_lifetime = 3600
server_idle_timeout = 600
server_reset_query = DISCARD ALL
server_check_delay = 30
server_check_query = select 1

; Connection limits per user/database pair
max_db_connections = 100
max_user_connections = 100

; Query handling
query_timeout = 0
query_wait_timeout = 120
client_idle_timeout = 0
client_login_timeout = 60

; TCP settings
tcp_keepalive = 1
tcp_keepidle = 900
tcp_keepintvl = 300
tcp_keepcnt = 3

; Logging
log_connections = 1
log_disconnections = 1
log_pooler_errors = 1
stats_period = 60

; Admin access (for monitoring)
admin_users = pgbouncer
stats_users = pgbouncer, stats